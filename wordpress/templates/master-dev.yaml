AWSTemplateFormatVersion: 2010-09-09

Description: >
  Stack to deploy scalable Wordpress environment for Coachella. Uses nested stacks to create VPC
  with public/private subnets, security groups, RDS instance, web autoscaling groug, bastion server
  memcache, application load balancer, s3 bucket for uploads, and cloudfront distribution.
  This stack is derived from the aws reference architecture: https://github.com/aws-samples/aws-refarch-wordpress

Metadata:

  Authors:
    Description: Mondo Robot

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General AWS
        Parameters:
          - Environment
          - EC2KeyName
          - SshAccessCidr
          - AdminEmail
          - WPDomainName
          - UseRoute53Boolean
      - Label:
          default: Network
        Parameters:
          - NumberOfAZs
          - AvailabilityZones
          - UsePrivateSubnets
      - Label:
          default: Database
        Parameters:
          - DatabaseEngine
          - DatabaseInstanceType
          - DatabaseEncrpytedBoolean
          - DatabaseMultiAz
          - DatabaseCmk
          - DatabaseMasterUsername
          - DatabaseMasterPassword
          - DatabaseName
          - DatabaseRestoreSnapshot
      - Label:
          default: Memcache
        Parameters:
            - UseElastiCacheBoolean
            - ElastiCacheNodeType
      - Label:
          default: Bastion Server
        Parameters:
          - BastionInstanceType
      - Label:
          default: Web
        Parameters:
          - PublicAlbAcmCertificate
          - PHPVersion
          - PHPIniOverride
          - WebInstanceType
          - WebAsgMax
          - WebAsgMin
      - Label:
          default: WordPress
        Parameters:
          - WPVersion
          - WPTitle
          - WPAdminUsername
          - WPAdminPassword
          - WPDirectory
          - WPLocale
          - WPACFProKey
      - Label:
          default: S3/CloudFront
        Parameters:
          - S3MediaBucketName
          - UseCloudFrontBoolean
          - CloudFrontAcmCertificate
          - CloudFrontPriceClass

    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      BastionInstanceType:
        default: Bastion Instance Type
      CloudFrontAcmCertificate:
        default: CloudFront Certificate ARN
      CloudFrontPriceClass:
        default: Price Class
      DatabaseCmk:
        default: AWS KMS CMK for RDS
      DatabaseEncrpytedBoolean:
        default: Encrypted DB Cluster (must be false for db.t2.micro)
      DatabaseEngine:
        default: Database Engine
      DatabaseInstanceType:
        default: DB Instance Class (not all are valid for every engine)
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseMultiAz:
        default: DB MultiAZ (only for mysql engine)
      DatabaseMasterUsername:
        default: DB Master Username
      DatabaseName:
        default: DB Name
      DatabaseRestoreSnapshot:
        default: Snapshot to restore from
      EC2KeyName:
        default: EC2 Key Pair
      ElastiCacheNodeType:
        default: Cache Cluster Node Type
      Environment:
        default: Environment
      NumberOfAZs:
        default: Number of Availability Zones
      PHPIniOverride:
        default: AWS php.ini Overrides
      PHPVersion:
        default: PHP Version
      PublicAlbAcmCertificate:
        default: ALB Certificate ARN
      S3MediaBucketName:
        default: S3 Bucket name for media asset uploads
      SshAccessCidr:
        default: SSH Access From
      UseElastiCacheBoolean:
        default: Cache Cluster (ElastiCache)
      UseCloudFrontBoolean:
        default: CDN (CloudFront)
      UsePrivateSubnets:
        default: Use Private Subnets
      UseRoute53Boolean:
        default: DNS record set (Route53)
      WebAsgMax:
        default: Web ASG Max
      WebAsgMin:
        default: Web ASG Min
      WebInstanceType:
        default: Web Tier Instance Type
      WPTitle:
        default: Site Title
      WPACFProKey:
        default: '[Optional] Advanced Custom Fields Pro key'
      WPAdminUsername:
        default: Admin Username
      WPAdminPassword:
        default: Admin Password
      AdminEmail:
        default: Email Address
      WPDirectory:
        default: Site Directory
      WPDomainName:
        default: Site Domain
      WPLocale:
        default: Language Code
      WPVersion:
        default: WordPress Version

Parameters:
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - f1.2xlarge
      - f1.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t2.nano
    Description: Bastion EC2 instance type.
    Type: String
  CloudFrontAcmCertificate:
    AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
    Description: '[ Optional ] The AWS Certification Manager certificate ARN for the CloudFront distribution certificate - this certificate should be created in the us-east-1 (N. Virginia) region and must reference the WordPress domain name you use below.'
    Type: String
  CloudFrontPriceClass:
    AllowedValues: [PriceClass_100, PriceClass_200, PriceClass_All]
    Default: PriceClass_All
    Description: The price class that corresponds to which edge servers are used.
    Type: String
  DatabaseCmk:
    Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
    Type: String
  DatabaseEncrpytedBoolean:
    AllowedValues: [true, false]
    Default: true
    Description: Encrypt DB at rest. Must be false when db instance is db.t2.micro
    Type: String
  DatabaseEngine:
    AllowedValues: [aurora, mysql]
    Default: mysql
    Type: String
  DatabaseInstanceType:
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarg
      - db.m5.24xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: Must be a valid RDS instance class.
    Default: db.t2.micro
    Description: RDS Instance type. Valid instance types depend on engine. See https://aws.amazon.com/rds/pricing/
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master username.
    ConstraintDescription: Must contain only alphanumeric characters (minimum 8; maximum 16).
    MaxLength: 16
    MinLength: 8
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-zA-Z0-9`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, spaces, and these special characters `~!#$%^&*()_+,-
    Description: The Amazon RDS master password. Letters, numbers, spaces, and these special characters `~!#$%^&*()_+,-
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseMultiAz:
    AllowedValues: [true, false]
    ConstraintDescription: Value must be a boolean value.
    Default: true
    Description: Only applies to mysql engine. Specifies if using multiple availability zones.
    Type: String
  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master database name.
    Type: String
  DatabaseRestoreSnapshot:
    Description: Snapshot to restore from
    Type: String
  EC2KeyName:
    ConstraintDescription: Must be letters (upper or lower), numbers, and special characters.
    Description: Name of an EC2 KeyPair. Your bastion & Web instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  ElastiCacheNodeType:
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m4.large
      - cache.m4.xlarge
      - cache.m4.2xlarge
      - cache.m4.4xlarge
      - cache.m4.10xlarge
      - cache.m3.medium
      - cache.m3.large
      - cache.m3.xlarge
      - cache.m3.2xlarge
      - cache.r3.large
      - cache.r3.xlarge
      - cache.r3.2xlarge
      - cache.r3.4xlarge
      - cache.r3.8xlarge
    ConstraintDescription: Must be a valid Amazon ElastiCache node type.
    Default: cache.t2.micro
    Description: The Amazon ElastiCache cluster node type.
    Type: String
  Environment:
    AllowedValues: [develop, staging, production]
    Default: develop
    Description: The development environment
    Type: String
  NumberOfAZs:
    AllowedValues: [2, 3, 4, 5, 6]
    Default: 2
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.
    Type: Number
  PHPIniOverride:
    Default: https://s3.amazonaws.com/cf-coachella/wordpress/config-files/20-aws.ini
    Description: '[Optional] Full Amazon S3 https path to a php.ini override file'
    Type: String
  PHPVersion:
    AllowedValues: [7.0]
    Default: 7.0
    Description: The version of PHP to install.
    Type: String
  PublicAlbAcmCertificate:
    AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
    Description: '[ Optional ] The AWS Certification Manager certificate ARN for the ALB certificate - this certificate should be created in the region you wish to run the ALB and must reference the WordPress domain name you use below.'
    Type: String
  S3MediaBucketName:
    Default: coachella-media-assets
    Description: The name to use when generating the S3 bucket for media asset uploads
    Type: String
  SshAccessCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: The CIDR IP range that is permitted to SSH to bastion instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP address.
    Type: String
    Default: 0.0.0.0/0
  UseCloudFrontBoolean:
    AllowedValues: [true, false]
    Default: true
    Description: Specifies whether a CloudFront Distribution should be created to serve the WordPress website content.
    Type: String
  UseElastiCacheBoolean:
    AllowedValues: [true, false]
    Default: true
    Description: Specifies whether an ElastiCache Cache Cluster should be created to cache WordPress database content.
    Type: String
  UsePrivateSubnets:
    AllowedValues: [true, false]
    Default: true
    Description: Specifies wether to use private subnets in VPC (should be true for production)
    Type: String
  UseRoute53Boolean:
    AllowedValues: [true, false]
    Default: true
    Description: Specifies whether a record set should be created in Route 53 for your WordPress domain name.
    Type: String
  WebAsgMax:
    AllowedPattern: ^((?!0$)[1-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 2
    Description: Specifies the maximum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebAsgMin:
    AllowedPattern: ^([0-0]?[0-9]|10)$
    ConstraintDescription: Must be a number between 0 and 10.
    Default: 1
    Description: Specifies the minimum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - f1.2xlarge
      - f1.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t2.micro
    Description: The Amazon EC2 instance type for your web instances.
    Type: String
  AdminEmail:
    AllowedPattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
    Description: The admin email address for WordPress and AWS notifications.
    Type: String
  WPACFProKey:
    Default: ''
    Description: Advanced Custom Fields Pro key
    NoEcho: true
    Type: String
  WPAdminPassword:
    AllowedPattern: ^([a-zA-Z0-9`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, spaces, and these special characters `~!#$%^&*()_+,-
    Description: The WordPress admin password. Letters, numbers, spaces, and these special characters `~!#$%^&*()_+,-
    Type: String
    NoEcho: true
  WPAdminUsername:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9_-])*([a-zA-Z0-9])$
    Description: The WordPress admin username.
    Type: String
  WPDirectory:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9_-])*([a-zA-Z0-9])$
    Description: The WordPress site directory.
    Type: String
  WPDomainName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Description: '[ Optional ] The main domain name of the WordPress site (e.g. example.com).'
    Type: String
  WPLocale:
    Description: "The main language of the WordPress site, as per https://codex.WordPress.org/Installing_WordPress_in_Your_Language. The default is 'en_US'."
    Type: String
    Default: en_US
  WPTitle:
    Default: Coachella
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9 _-]*)([a-zA-Z0-9])$
    Description: The WordPress website title.
    Type: String
  WPVersion:
    AllowedValues:
      - latest
      - nightly
      - 4.5.3
      - 4.6.1
      - 4.7.4
      - 4.8.2
      - 4.9.8
      - 4.9.9
      - 5.0
    Default: 4.9.9
    Description: The WordPress version (make sure this version is compatible with the PHP version selected above).
    Type: String

Conditions:
  AvailableAWSRegion:
    !Or [
      !Equals [ !Ref 'AWS::Region', ap-southeast-2 ],
      !Equals [ !Ref 'AWS::Region', eu-central-1 ],
      !Equals [ !Ref 'AWS::Region', eu-west-1 ],
      !Equals [ !Ref 'AWS::Region', us-east-1 ],
      !Equals [ !Ref 'AWS::Region', us-east-2 ],
      !Equals [ !Ref 'AWS::Region', us-west-2 ]
    ]
  CreateRecordSet: !And
    - !Equals [ true, !Ref UseRoute53Boolean ]
    - !Condition AvailableAWSRegion
  DeployCloudFront: !And
    - !Equals [ true, !Ref UseCloudFrontBoolean ]
    - !Condition AvailableAWSRegion
  DeployElastiCache: !And
    - !Equals [ true, !Ref UseElastiCacheBoolean ]
    - !Condition AvailableAWSRegion
  MySqlDbEngine: !Equals [ 'mysql', !Ref DatabaseEngine ]
  PrivateSubnetsEnabled: !Equals [ !Ref UsePrivateSubnets, true ]

Resources:
  BastionModule:
    Condition: AvailableAWSRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BastionInstanceType: !Ref BastionInstanceType
        BastionSecurityGroup: !GetAtt SecurityGroupsModule.Outputs.BastionSecurityGroup
        EC2KeyName: !Ref EC2KeyName
        NumberOfSubnets: !Ref NumberOfAZs
        Subnet: !GetAtt VpcModule.Outputs.PublicSubnet
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/bastion.yaml
  CloudFrontModule:
    Condition: DeployCloudFront
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudFrontAcmCertificate: !Ref CloudFrontAcmCertificate
        PriceClass: !Ref CloudFrontPriceClass
        PublicAlbDnsName: !GetAtt PublicAlbModule.Outputs.PublicAlbDnsName
        S3MediaBucketOrigin: !GetAtt S3MediaUploadModule.Outputs.DomainName
        WPDomainName: !Ref WPDomainName
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/cloudfront.yaml
  ElasticacheModule:
    Condition: DeployElastiCache
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Subnet: !If [ PrivateSubnetsEnabled, !GetAtt VpcModule.Outputs.DataSubnet, !GetAtt VpcModule.Outputs.PublicSubnet ]
        ElastiCacheNodeType: !Ref ElastiCacheNodeType
        ElastiCacheSecurityGroup: !GetAtt SecurityGroupsModule.Outputs.ElastiCacheSecurityGroup
        NumberOfSubnets: !Ref NumberOfAZs
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/elasticache.yaml
  PublicAlbModule:
    Condition: AvailableAWSRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        NumberOfSubnets: !Ref NumberOfAZs
        Subnet: !GetAtt VpcModule.Outputs.PublicSubnet
        PublicAlbAcmCertificate: !Ref PublicAlbAcmCertificate
        PublicAlbSecurityGroup: !GetAtt SecurityGroupsModule.Outputs.PublicAlbSecurityGroup
        Vpc: !GetAtt VpcModule.Outputs.Vpc
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/publicalb.yaml
  RdsModule:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        DatabaseInstanceType: !Ref DatabaseInstanceType
        DatabaseMasterUsername: !Ref DatabaseMasterUsername
        DatabaseMasterPassword: !Ref DatabaseMasterPassword
        DatabaseName: !Ref DatabaseName
        DatabaseEncrpytedBoolean: !Ref DatabaseEncrpytedBoolean
        DatabaseCmk: !Ref DatabaseCmk
        DatabaseRestoreSnapshot: !Ref DatabaseRestoreSnapshot
        DatabaseSecurityGroup: !GetAtt SecurityGroupsModule.Outputs.DatabaseSecurityGroup
        MultiAZ: !If [ MySqlDbEngine, !Ref DatabaseMultiAz, !Ref 'AWS::NoValue' ]
        NumberOfSubnets: !Ref NumberOfAZs
        Subnet: !If [ PrivateSubnetsEnabled, !GetAtt VpcModule.Outputs.DataSubnet, !GetAtt VpcModule.Outputs.PublicSubnet ]
      TemplateURL: !If [ MySqlDbEngine, 'https://s3.amazonaws.com/cf-coachella/wordpress/rds-mysql.yaml', 'https://s3.amazonaws.com/cf-coachella/wordpress/rds-aurora.yaml' ]
  Route53Module:
    Condition: CreateRecordSet
    DependsOn: WebModule
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        DnsEndpoint: !If [ DeployCloudFront, !GetAtt CloudFrontModule.Outputs.DnsEndpoint, !GetAtt PublicAlbModule.Outputs.PublicAlbDnsName ]
        DnsHostId: !If [ DeployCloudFront, 'Z2FDTNDATAQYW2', !GetAtt PublicAlbModule.Outputs.PublicAlbCanonicalHostedZoneId ]
        WPDomainName: !Ref WPDomainName
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/route53.yaml
  S3MediaUploadModule:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AccessControl: PublicRead
        BucketName: !Ref S3MediaBucketName
        Environment: !Ref Environment
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/s3.yaml
  S3MediaUploadEndpointModule:
    Condition: PrivateSubnetsEnabled
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        RouteTableIds: !GetAtt VpcModule.Outputs.NatRouteTable
        S3Bucket: !GetAtt S3MediaUploadModule.Outputs.Name
        VpcId: !GetAtt VpcModule.Outputs.Vpc
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/s3-endpoint.yaml
  SecurityGroupsModule:
    Condition: AvailableAWSRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SshAccessCidr: !Ref SshAccessCidr
        Vpc: !GetAtt VpcModule.Outputs.Vpc
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/securitygroups.yaml
  VpcModule:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        NumberOfAZs: !Ref NumberOfAZs
        AvailabilityZones: !Join [ ',', !Ref AvailabilityZones ]
        VpcCidr: 10.0.0.0/16
        VpcTenancy: default
        PublicSubnet0Cidr: 10.0.200.0/24
        PublicSubnet1Cidr: 10.0.201.0/24
        PublicSubnet2Cidr: 10.0.202.0/24
        PublicSubnet3Cidr: 10.0.203.0/24
        PublicSubnet4Cidr: 10.0.204.0/24
        PublicSubnet5Cidr: 10.0.205.0/24
        WebSubnet0Cidr: 10.0.0.0/22
        WebSubnet1Cidr: 10.0.4.0/22
        WebSubnet2Cidr: 10.0.8.0/22
        WebSubnet3Cidr: 10.0.12.0/22
        WebSubnet4Cidr: 10.0.16.0/22
        WebSubnet5Cidr: 10.0.20.0/22
        DataSubnet0Cidr: 10.0.100.0/24
        DataSubnet1Cidr: 10.0.101.0/24
        DataSubnet2Cidr: 10.0.102.0/24
        DataSubnet3Cidr: 10.0.103.0/24
        DataSubnet4Cidr: 10.0.104.0/24
        DataSubnet5Cidr: 10.0.105.0/24
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/vpc.yaml
  WebModule:
    Condition: AvailableAWSRegion
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CdnUrl: !If [ DeployCloudFront, !GetAtt CloudFrontModule.Outputs.DnsHostname, !Ref 'AWS::NoValue' ]
        DatabaseClusterEndpointAddress: !GetAtt RdsModule.Outputs.DatabaseClusterEndpointAddress
        DatabaseMasterUsername: !Ref DatabaseMasterUsername
        DatabaseMasterPassword: !Ref DatabaseMasterPassword
        DatabaseName: !Ref DatabaseName
        EC2KeyName: !Ref EC2KeyName
        MediaUploadAccessKeyId: !GetAtt S3MediaUploadModule.Outputs.AccessKeyId
        MediaUploadAccessKeySecret: !GetAtt S3MediaUploadModule.Outputs.AccessKeySecret
        MediaUploadBucket: !GetAtt S3MediaUploadModule.Outputs.Name
        NumberOfSubnets: !Ref NumberOfAZs
        PHPIniOverride: !Ref PHPIniOverride
        PHPVersion: !Ref PHPVersion
        PublicAlbTargetGroupArn: !GetAtt PublicAlbModule.Outputs.PublicAlbTargetGroupArn
        PublicAlbHostname: !GetAtt PublicAlbModule.Outputs.PublicAlbHostname
        SslCertificate: !GetAtt PublicAlbModule.Outputs.SslCertificate
        WebAsgMax: !Ref WebAsgMax
        WebAsgMin: !Ref WebAsgMin
        WebInstanceType: !Ref WebInstanceType
        WebSecurityGroup: !GetAtt SecurityGroupsModule.Outputs.WebSecurityGroup
        Subnet: !If [ PrivateSubnetsEnabled, !GetAtt VpcModule.Outputs.WebSubnet, !GetAtt VpcModule.Outputs.PublicSubnet ]
        WPACFProKey: !Ref WPACFProKey
        WPAdminEmail: !Ref AdminEmail
        WPAdminPassword: !Ref WPAdminPassword
        WPAdminUsername: !Ref WPAdminUsername
        WPDirectory: !Ref WPDirectory
        WPDomainName: !Ref WPDomainName
        WPLocale: !Ref WPLocale
        WPTitle: !Ref WPTitle
        WPVersion: !Ref WPVersion
      TemplateURL: https://s3.amazonaws.com/cf-coachella/wordpress/web.yaml

Outputs:
  MediaUploadAccessKeyId:
    Description: The access key id for the user account that does the uploads
    Value: !GetAtt S3MediaUploadModule.Outputs.AccessKeyId
  MediaUploadAccessKeySecret:
    Description: The access key secret for the user account that does the uploads
    Value: !GetAtt S3MediaUploadModule.Outputs.AccessKeySecret
  MediaUploadBucket:
    Description: The bucket for media uploads
    Value: !GetAtt S3MediaUploadModule.Outputs.Name
  OpCacheValidationUrl:
    Description: A page to validate OpCache has been enabled for each instance in the ASG. Refresh the page to see the status of each instance in the ASG.
    Value: !Join [ '', [ !If [ CreateRecordSet, !Sub 'http://www.${WPDomainName}', !If [ DeployCloudFront, !GetAtt CloudFrontModule.Outputs.DnsHostname, !GetAtt PublicAlbModule.Outputs.PublicAlbHostname ] ], '/opcache-instanceid.php' ] ]
  StackName:
    Value: !Ref AWS::StackName
  StackStatus:
    Description: Master Stack Status
    Value: !If [ AvailableAWSRegion, !Sub 'Stack created in an available region: ${AWS::Region}', "!!ERROR!!! - Nothing to do! - unavailable AWS Region. You must create this stack in an available AWS Region: 'us-east-1', 'us-east-2', 'us-west-2', 'eu-west-1', 'ap-southeast-2'." ]
  WPSiteUrl:
    Description: The URL of the WordPress site
    Value: !If [ CreateRecordSet, !Sub 'http://www.${WPDomainName}', !If [ DeployCloudFront, !GetAtt CloudFrontModule.Outputs.DnsHostname, !GetAtt PublicAlbModule.Outputs.PublicAlbHostname ] ]
