---
AWSTemplateFormatVersion: 2010-09-09

Description: Creates CloudFront distribution for Coachella WordPress site

Metadata:
  Authors:
    Description: Mondo Robot

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Parameters
        Parameters:
          - CloudFrontAcmCertificate
          - WPDomainName
          - PublicAlbDnsName
          - S3MediaBucketOrigin
          - PriceClass
    ParameterLabels:
      CloudFrontAcmCertificate:
        default: CloudFront Certificate ARN
      PriceClass:
        default: Price Class
      PublicAlbDnsName:
        default: Public ALB DNS Name
      S3MediaBucketOrigin:
        default: Media upload S3 bucket
      WPDomainName:
        default: Domain name of the WordPress site

Parameters:
  CloudFrontAcmCertificate:
    AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
    Description: '[ Optional ] The AWS Certification Manager certificate ARN for the CloudFront distribution certificate - this certificate should be created in the us-east-1 (N. Virginia) region and must reference the WordPress domain name you use below.'
    Type: String
  PriceClass:
    AllowedValues: [PriceClass_100, PriceClass_200, PriceClass_All]
    Default: PriceClass_All
    Description: The price class that corresponds to which edge servers are used.
    Type: String
  PublicAlbDnsName:
    Description: The public application load balancer dns name.
    Type: String
  S3MediaBucketOrigin:
    Description: The domain of the S3 bucket for media uploads
    Type: String
  WPDomainName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Description: '[ Optional ] The main domain name of the WordPress site (e.g. example.com).'
    Type: String

Conditions:
  HasDomain: !Not [ !Equals [ '', !Ref WPDomainName ] ]
  HasMediaBucket: !Note [ !Equals [ '', !Ref S3S3MediaBucketOrigin ] ]
  UseDefaultCert: !Equals [ '', !Ref CloudFrontAcmCertificate ]

Resources:
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !If [ HasDomain, !Join [ '', [ '*.', !Ref WPDomainName ] ], !Ref 'AWS::NoValue' ]
        CacheBehaviors:
          - PathPattern: wp-includes/*
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            DefaultTTL: 900
            MaxTTL: 900
            MinTTL: 900
            ForwardedValues:
              QueryString: true
              Headers:
                - Host
            TargetOriginId: elb
            ViewerProtocolPolicy: !If [ UseDefaultCert, 'allow-all', 'redirect-to-https' ]
            Compress: true
          - PathPattern: wp-content/*
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            DefaultTTL: 900
            MaxTTL: 900
            MinTTL: 900
            ForwardedValues:
              QueryString: true
              Headers:
                - Host
            TargetOriginId: elb
            ViewerProtocolPolicy: !If [ UseDefaultCert, 'allow-all', 'redirect-to-https']
            Compress: true
          - PathPattern: uploads/*
            AllowedMethods: [GET, HEAD, OPTIONS]
            CachedMethods: [GET, HEAD, OPTIONS]
            Compress: true
            ForwardedValues:
              Cookies:
                Forward: none
              QueryString: false
            DefaultTTL: 86400
            MaxTTL: 31536000
            MinTTL: 0
            TargetOriginId: s3UploadsOrigin
            ViewerProtocolPolicy: !If [ UseDefaultCert, 'allow-all', 'redirect-to-https']
        Comment: !Ref 'AWS::StackName'
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          ForwardedValues:
            QueryString: true
            Headers:
              - '*'
            Cookies:
              Forward: all
          TargetOriginId: elb
          ViewerProtocolPolicy: !If [ UseDefaultCert, 'allow-all', 'redirect-to-https']
          Compress: true
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !Ref PublicAlbDnsName
            Id: elb
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
          - !If
            - HasMediaBucket
            - DomainName: !Ref S3MediaBucketOrigin
              Id: s3UploadsOrigin
              S3OriginConfig: {}
            - !Ref 'AWS::NoValue'
        PriceClass: !Ref PriceClass
        ViewerCertificate:
          AcmCertificateArn: !If [ UseDefaultCert, !Ref 'AWS::NoValue', !Ref CloudFrontAcmCertificate ]
          CloudFrontDefaultCertificate: !If [ UseDefaultCert, true, !Ref 'AWS::NoValue' ]
          SslSupportMethod: !If [ UseDefaultCert, !Ref 'AWS::NoValue', 'sni-only' ]

Outputs:
  StackName:
    Value: !Ref AWS::StackName
  Id:
    Value: !Ref CloudFrontDistribution
  DnsEndpoint:
    Value: !GetAtt CloudFrontDistribution.DomainName
  DnsHostname:
    Value: !Sub https://${CloudFrontDistribution.DomainName}
